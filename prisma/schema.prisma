generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// ========================================
// ENUMS CENTRALIZADOS
// ========================================

enum EstadoGeneral {
  ACTIVO
  INACTIVO
  SUSPENDIDO
  ELIMINADO
}

enum EstadoPago {
  PENDIENTE
  PROCESANDO
  COMPLETADO
  FALLIDO
  CANCELADO
  REEMBOLSADO
}

enum EstadoOrdenVenta {
  PENDIENTE
  CONFIRMADA
  EN_PROCESO
  ENVIADA
  ENTREGADA
  CANCELADA
}

enum EstadoCotizacion {
  PENDIENTE
  ENVIADA
  ACEPTADA
  RECHAZADA
  VENCIDA
}

enum EstadoFactura {
  EMITIDA
  PAGADA
  VENCIDA
  ANULADA
}

enum EstadoNotaCredito {
  EMITIDA
  APLICADA
  ANULADA
}

enum EstadoModeracion {
  PENDIENTE
  APROBADO
  RECHAZADO
}

enum TipoContrato {
  INDEFINIDO
  TEMPORAL
  PRACTICAS
  FREELANCE
}

enum TipoDocumento {
  DNI
  CARNET_EXTRANJERIA
  PASAPORTE
  RUC
}

// ========================================
// ENUMS PARA FUNCIONALIDAD SAAS
// ========================================

enum PlanSuscripcion {
  TRIAL
  BASICO
  PRO
  ENTERPRISE
}

enum EstadoSuscripcion {
  TRIAL
  ACTIVA
  SUSPENDIDA
  CANCELADA
  VENCIDA
}

enum TipoConsulta {
  COTIZACION
  INFORMACION
  SOPORTE
  PEDIDO
  RECLAMO
  CATALOGO
}

enum EstadoConsulta {
  NUEVA
  EN_PROCESO
  RESPONDIDA
  CERRADA
}

model UsuarioEmpresa {
  id_usuario_empresa Int      @id @default(autoincrement())
  usuario            Usuario  @relation(fields: [usuario_id], references: [id_usuario])
  usuario_id         Int
  empresa            Empresa  @relation(fields: [empresa_id], references: [id_empresa])
  empresa_id         Int
  cargo              String?
  departamento       String?
  es_dueno           Boolean @default(false)
  fecha_inicio       DateTime @default(now())
  fecha_fin          DateTime?
  estado             String  @default("activo")
  tipo_contrato      String  @default("indefinido")
  salario            Decimal? @db.Decimal(10,2)
  horario_trabajo    Json?
  beneficios         Json?
  notas              String?
  fecha_asignacion   DateTime @default(now())
  rol_empresa        RolEmpresa? @relation(fields: [rol_empresa_id], references: [id_rol])
  rol_empresa_id     Int?

  @@unique([usuario_id, empresa_id])
  @@map("usuarios_empresa")
}

model ClienteEmpresa {
  id_cliente_empresa Int      @id @default(autoincrement())
  cliente            Cliente  @relation(fields: [cliente_id], references: [id_cliente])
  cliente_id         Int
  empresa            Empresa  @relation(fields: [empresa_id], references: [id_empresa])
  empresa_id         Int
  fecha_registro     DateTime @default(now())

  @@unique([cliente_id, empresa_id])
  @@map("clientes_empresa")
}

model Cliente {
  id_cliente    Int       @id @default(autoincrement())
  usuario       Usuario   @relation("UsuarioCliente", fields: [id_usuario], references: [id_usuario])
  id_usuario    Int       @unique
  nombre        String
  email         String
  telefono      String?
  tipo_cliente  String    @default("individual")
  preferencias  Json?
  limite_credito Decimal? @db.Decimal(10,2)
  dias_credito  Int?
  empresas      ClienteEmpresa[]
  historialCompras HistorialCompra[]
  citas         Cita[]
  valoraciones  Valoracion[]
  notificaciones Notificacion[]
  feedback      Feedback[]
  fidelizacion  Fidelizacion[]
  cotizaciones  Cotizacion[]
  ordenesVenta  OrdenVenta[]
  consultas_whatsapp ConsultaWhatsapp[]

  @@map("clientes")
}

model Direccion {
  id_direccion Int       @id @default(autoincrement())
  direccion    String
  departamento String
  provincia    String
  distrito     String
  id_empresa   Int
  empresa      Empresa  @relation(fields: [id_empresa], references: [id_empresa])
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt

  @@map("direcciones")
}

model Categoria {
  id_categoria  Int                @id @default(autoincrement())
  nombre        String
  subcategorias Subcategoria[]
  productos     ProductoServicio[]
  descuentos    CategoriaDescuento[]

  @@map("categorias")
}

model Subcategoria {
  id_subcategoria Int                @id @default(autoincrement())
  id_categoria    Int
  nombre          String
  productos       ProductoServicio[]
  categoria       Categoria          @relation(fields: [id_categoria], references: [id_categoria])

  @@map("subcategorias")
}

model ProductoServicio {
  id_producto    Int       @id @default(autoincrement())
  nombre         String
  precio         Decimal   @db.Decimal(10,2)
  empresa        Empresa   @relation(fields: [id_empresa], references: [id_empresa])
  id_empresa     Int
  categoria      Categoria @relation(fields: [id_categoria], references: [id_categoria])
  id_categoria   Int
  subcategoria   Subcategoria? @relation(fields: [id_subcategoria], references: [id_subcategoria])
  id_subcategoria Int?
  es_servicio    Boolean   @default(false)
  atributos      Atributo[]
  historialCompras HistorialCompra[]
  valoraciones   Valoracion[]
  disponibilidad Disponibilidad?
  stock          Stock?
  archivos       ArchivoMultimedia[]
  historial_precios HistorialPrecio[]
  precios_zona   PrecioZona[]
  descuentos     ProductoDescuento[]
  items_cotizacion ItemCotizacion[]
  items_orden_venta ItemOrdenVenta[]
  items_nota_credito ItemNotaCredito[]
  items_nota_debito ItemNotaDebito[]
  proveedores      ProductoProveedor[]
  items_orden_compra ItemOrdenCompra[]
  items_cotizacion_proveedor ItemCotizacionProveedor[]

  @@map("productos_servicios")
}

model Atributo {
  id_atributo    Int       @id @default(autoincrement())
  producto       ProductoServicio @relation(fields: [id_producto], references: [id_producto])
  id_producto    Int
  nombre         String
  valor          String

  @@map("atributos")
}

model HistorialCompra {
  id_historial   Int       @id @default(autoincrement())
  cliente        Cliente   @relation(fields: [id_cliente], references: [id_cliente])
  id_cliente     Int
  producto       ProductoServicio @relation(fields: [id_producto], references: [id_producto])
  id_producto    Int
  fecha_compra   DateTime  @default(now())
  pagos          Pago[]

  @@map("historial_compras")
}

model Cita {
  id_cita        Int       @id @default(autoincrement())
  cliente        Cliente   @relation(fields: [id_cliente], references: [id_cliente])
  id_cliente     Int
  empresa        Empresa   @relation(fields: [id_empresa], references: [id_empresa])
  id_empresa     Int
  fecha_cita     DateTime

  @@map("citas")
}

model MetodoPago {
  id_metodo_pago Int       @id @default(autoincrement())
  nombre         String    @unique
  descripcion    String?
  tipo_pago      String
  tiene_comision Boolean   @default(false)
  porcentaje_comision Decimal? @db.Decimal(5,2)
  pagos          Pago[]

  @@map("metodos_pago")
}

model Pago {
  id_pago        Int       @id @default(autoincrement())
  historial      HistorialCompra @relation(fields: [id_historial], references: [id_historial])
  id_historial   Int
  metodoPago     MetodoPago @relation(fields: [id_metodo_pago], references: [id_metodo_pago])
  id_metodo_pago Int
  monto          Decimal   @db.Decimal(10,2)
  fecha_pago     DateTime  @default(now())
  estado_pago    String    @default("pendiente")
  logsPagos      LogPago[]
  reembolsos     Reembolso[]

  @@map("pagos")
}

model LogPago {
  id_log_pago    Int       @id @default(autoincrement())
  pago           Pago      @relation(fields: [id_pago], references: [id_pago])
  id_pago        Int
  usuario        Usuario   @relation(fields: [id_usuario], references: [id_usuario])
  id_usuario     Int
  accion         String
  fecha_accion   DateTime  @default(now())

  @@map("logs_pagos")
}

model Valoracion {
  id_valoracion  Int       @id @default(autoincrement())
  cliente        Cliente   @relation(fields: [id_cliente], references: [id_cliente])
  id_cliente     Int
  producto       ProductoServicio @relation(fields: [id_producto], references: [id_producto])
  id_producto    Int
  puntuacion     Int
  comentario     String?
  estado_moderacion String @default("pendiente")
  comentario_moderador String?

  @@map("valoraciones")
}

model Notificacion {
  id_notificacion    Int      @id @default(autoincrement())
  id_cliente         Int
  mensaje            String
  fecha_notificacion DateTime @default(now())
  estado             String   @default("pendiente")
  cliente            Cliente  @relation(fields: [id_cliente], references: [id_cliente])
  feedback           Feedback[]

  @@map("notificaciones")
}

model Feedback {
  id_feedback    Int   @id @default(autoincrement())
  id_cliente     Int
  comentario     String
  fecha_feedback DateTime @default(now())
  id_notificacion Int?
  cliente        Cliente  @relation(fields: [id_cliente], references: [id_cliente])
  notificacion   Notificacion? @relation(fields: [id_notificacion], references: [id_notificacion])

  @@map("feedback")
}

model Fidelizacion {
  id_fidelizacion Int      @id @default(autoincrement())
  id_cliente      Int
  fecha_inicio    DateTime
  fecha_fin       DateTime?
  puntos_actuales Int      @default(0)
  cliente         Cliente  @relation(fields: [id_cliente], references: [id_cliente])

  @@map("fidelizaciones")
}

model Disponibilidad {
  id_disponibilidad Int       @id @default(autoincrement())
  producto         ProductoServicio @relation(fields: [id_producto], references: [id_producto])
  id_producto      Int         @unique
  cantidad_disponible Int

  @@map("disponibilidad")
}

model Comunicacion {
  id_comunicacion Int         @id @default(autoincrement())
  empresa         Empresa       @relation(fields: [id_empresa], references: [id_empresa])
  id_empresa      Int
  mensaje         String
  fecha_comunicacion DateTime @default(now())

  @@map("comunicaciones")
}

model Stock {
  id_stock       Int         @id @default(autoincrement())
  producto       ProductoServicio @relation(fields: [id_producto], references: [id_producto])
  id_producto    Int         @unique
  cantidad       Int

  @@map("stock")
}

model AuditoriaCambio {
  id_auditoria    Int   @id @default(autoincrement())
  tabla_nombre    String
  id_registro     Int
  fecha_accion    DateTime @default(now())
  id_usuario      Int
  detalles_cambio Json
  ip_address      String?
  tipo_operacion  String
  user_agent      String?
  usuario         Usuario  @relation(fields: [id_usuario], references: [id_usuario])

  @@map("auditoria_cambios")
}

model Autenticacion2FA {
  id_2fa              Int   @id @default(autoincrement())
  id_usuario          Int   @unique
  codigo_verificacion String
  fecha_expiracion    DateTime
  estado              String
  usuario             Usuario  @relation(fields: [id_usuario], references: [id_usuario])

  @@map("autenticaciones_2fa")
}

model Reembolso {
  id_reembolso   Int       @id @default(autoincrement())
  pago           Pago      @relation(fields: [id_pago], references: [id_pago])
  id_pago        Int
  monto          Decimal   @db.Decimal(10,2)
  fecha_reembolso DateTime @default(now())
  motivo         String

  @@map("reembolsos")
}

model SesionUsuario {
  id_sesion        Int   @id @default(autoincrement())
  id_usuario       Int
  token            String   @unique
  dispositivo      String?
  ip_address       String?
  ultima_actividad DateTime @default(now())
  activa           Boolean  @default(true)
  fecha_creacion   DateTime @default(now())
  fecha_expiracion DateTime
  usuario          Usuario  @relation(fields: [id_usuario], references: [id_usuario])

  @@map("sesiones_usuario")
}

model TokenRevocado {
  id_token         Int   @id @default(autoincrement())
  token_jti        String   @unique
  fecha_revocacion DateTime @default(now())
  razon            String?
  id_usuario       Int
  usuario          Usuario  @relation(fields: [id_usuario], references: [id_usuario])

  @@map("tokens_revocados")
}

model Documento {
  id_documento   Int         @id @default(autoincrement())
  tipo_documento String
  numero_documento String
  fecha_emision  DateTime
  fecha_vencimiento DateTime?
  url_documento  String
  estado         String      @default("vigente")
  notas          String?
  fecha_registro DateTime  @default(now())
  usuario        Usuario?    @relation(fields: [usuario_id], references: [id_usuario])
  usuario_id     Int?
  empresa        Empresa?     @relation(fields: [empresa_id], references: [id_empresa])
  empresa_id     Int?
  archivos       ArchivoMultimedia[]

  @@map("documentos")
}

model ConfiguracionRegional {
  id_configuracion_regional Int      @id @default(autoincrement())
  id_empresa               Int      @unique
  empresa                  Empresa   @relation(fields: [id_empresa], references: [id_empresa])
  zona_horaria            String
  formato_fecha           String
  formato_hora            String
  idioma                  String
  formato_numero          String
  createdAt               DateTime @default(now())
  updatedAt               DateTime @updatedAt

  @@map("configuracion_regional")
}

model ConfiguracionImpuestos {
  id_configuracion_impuestos Int      @id @default(autoincrement())
  id_empresa                 Int      @unique
  empresa                    Empresa   @relation(fields: [id_empresa], references: [id_empresa])
  tasa_iva                  Decimal  @db.Decimal(5,2)
  tasa_isc                  Decimal  @db.Decimal(5,2)
  tasa_igv                  Decimal  @db.Decimal(5,2)
  redondeo                  Int
  incluir_impuestos         Boolean  @default(true)
  createdAt                 DateTime @default(now())
  updatedAt                 DateTime @updatedAt

  @@map("configuracion_impuestos")
}

model ConfiguracionMoneda {
  id_configuracion_moneda Int      @id @default(autoincrement())
  id_empresa             Int      @unique
  empresa                Empresa   @relation(fields: [id_empresa], references: [id_empresa])
  moneda_principal       String
  moneda_secundaria      String
  tipo_cambio           Decimal  @db.Decimal(10,4)
  redondeo              Int
  formato_moneda        String
  createdAt             DateTime @default(now())
  updatedAt             DateTime @updatedAt

  @@map("configuracion_moneda")
}

model CategoriaArchivo {
  id_categoria_archivo Int      @id @default(autoincrement())
  nombre              String
  descripcion         String?
  archivos           ArchivoMultimedia[]
  createdAt          DateTime @default(now())
  updatedAt          DateTime @updatedAt

  @@map("categorias_archivo")
}

model VersionArchivo {
  id_version         Int      @id @default(autoincrement())
  id_archivo         Int
  archivo            ArchivoMultimedia @relation(fields: [id_archivo], references: [id_archivo])
  numero_version     Int
  url_archivo        String
  cambios            String?
  fecha_version      DateTime @default(now())
  usuario_id         Int
  usuario            Usuario  @relation(fields: [usuario_id], references: [id_usuario])
  createdAt          DateTime @default(now())
  updatedAt          DateTime @updatedAt

  @@unique([id_archivo, numero_version])
  @@map("versiones_archivo")
}

model ArchivoMultimedia {
  id_archivo         Int      @id @default(autoincrement())
  nombre_archivo     String
  tipo_archivo       String
  mime_type          String
  url_archivo        String
  tamanio_bytes      Int
  dimensiones        Json?
  metadata           Json?
  fecha_subida       DateTime @default(now())
  activo             Boolean  @default(true)
  usuario_id         Int?
  usuario            Usuario? @relation(fields: [usuario_id], references: [id_usuario])
  empresa_id         Int?
  empresa            Empresa? @relation(fields: [empresa_id], references: [id_empresa])
  producto_id        Int?
  producto           ProductoServicio? @relation(fields: [producto_id], references: [id_producto])
  documento_id       Int?
  documento          Documento? @relation(fields: [documento_id], references: [id_documento])
  categoria_id       Int?
  categoria          CategoriaArchivo? @relation(fields: [categoria_id], references: [id_categoria_archivo])
  versiones          VersionArchivo[]
  createdAt          DateTime @default(now())
  updatedAt          DateTime @updatedAt

  @@map("archivos_multimedia")
}

model Empresa {
  id_empresa    Int       @id @default(autoincrement())
  nombre        String    @db.VarChar(100)
  razon_social  String    @db.VarChar(200)
  nombre_comercial String? @db.VarChar(100)
  ruc           String    @unique @db.VarChar(11)
  telefono      String?   @db.VarChar(20)
  tipo_empresa  String    @db.VarChar(50)
  tipo_contribuyente String @default("RER") @db.VarChar(20)
  estado        String    @default("activo") @db.VarChar(20)
  latitud       Decimal   @db.Decimal(9,6)
  longitud      Decimal   @db.Decimal(9,6)
  logo          String?   @db.VarChar(255)
  sitio_web     String?   @db.VarChar(255)
  redes_sociales Json?    @db.JsonB
  usuarios      UsuarioEmpresa[]
  clientes      ClienteEmpresa[]
  direcciones   Direccion[]
  productos     ProductoServicio[]
  citas         Cita[]
  comunicacion  Comunicacion[]
  documentos    Documento[]
  archivos      ArchivoMultimedia[]
  roles_empresa RolEmpresa[]
  cotizaciones  Cotizacion[]
  ordenesVenta  OrdenVenta[]
  proveedores   Proveedor[]
  ordenes_compra OrdenCompra[]
  configuracionRegional    ConfiguracionRegional?
  configuracionImpuestos   ConfiguracionImpuestos?
  configuracionMoneda      ConfiguracionMoneda?
  reportes         Reporte[]
  plantillas_reporte PlantillaReporte[]
  
  // Relaciones SaaS
  suscripcion        SuscripcionEmpresa?
  consultas_whatsapp ConsultaWhatsapp[]
  configuracion_whatsapp ConfiguracionWhatsapp?
  plantillas_respuesta PlantillaRespuesta[]
  metricas_whatsapp  MetricaWhatsapp[]
  auditoria          Auditoria[]
  
  // Relaciones para integración n8n y Evolution API
  webhook_configurations WebhookConfiguration[]
  integration_logs       IntegrationLog[]
  workflow_states        WorkflowState[]
  message_queues         MessageQueue[]
  evolution_instance     EvolutionInstance?
  message_templates      MessageTemplate[]
  business_events        BusinessEvent[]

  @@map("empresas")
}

model Permiso {
  id_permiso        Int                 @id @default(autoincrement())
  nombre            String              @unique
  descripcion       String?
  recurso           String
  accion            String
  permisoRol        PermisoRol[]
  permisoRolEmpresa PermisoRolEmpresa[]
  permisoUsuario    PermisoUsuario[]

  @@map("permisos")
}

model PermisoRol {
  id_permiso_rol Int     @id @default(autoincrement())
  rol_id         Int
  permiso_id     Int
  condiciones    String?
  permiso        Permiso @relation(fields: [permiso_id], references: [id_permiso])
  rol            Rol     @relation(fields: [rol_id], references: [id_rol])

  @@unique([rol_id, permiso_id])
  @@map("permisos_rol")
}

model PermisoRolEmpresa {
  id_permiso_rol Int     @id @default(autoincrement())
  id_rol         Int
  recurso        String
  accion         String
  fecha_creacion DateTime   @default(now())
  permiso_id     Int
  rolEmpresa     RolEmpresa @relation(fields: [id_rol], references: [id_rol])
  permiso        Permiso    @relation(fields: [permiso_id], references: [id_permiso])

  @@unique([id_rol, recurso, accion])
  @@map("permisos_rol_empresa")
}

model PermisoUsuario {
  id_permiso_usuario Int     @id @default(autoincrement())
  usuario_id         Int
  permiso_id         Int
  condiciones        String?
  permiso            Permiso @relation(fields: [permiso_id], references: [id_permiso])
  usuario            Usuario @relation(fields: [usuario_id], references: [id_usuario])

  @@unique([usuario_id, permiso_id])
  @@map("permisos_usuario")
}

model Rol {
  id_rol       Int          @id @default(autoincrement())
  nombre       String       @unique
  descripcion  String?
  rol_padre_id Int?
  permisoRol   PermisoRol[]
  rol          Rol?         @relation("RolToRol", fields: [rol_padre_id], references: [id_rol])
  other_Rol    Rol[]        @relation("RolToRol")
  usuario      Usuario[]

  @@map("roles")
}

model RolEmpresa {
  id_rol          Int      @id @default(autoincrement())
  nombre          String   @db.VarChar(100)
  descripcion     String?  @db.Text
  id_empresa      Int
  horario_inicio  String?  @db.VarChar(8)
  horario_fin     String?  @db.VarChar(8)
  fecha_inicio    DateTime? @db.Date
  fecha_fin       DateTime? @db.Date
  fecha_creacion  DateTime @default(now()) @db.Timestamp(6)
  fecha_actualizacion DateTime @updatedAt @db.Timestamp(6)
  empresa         Empresa  @relation(fields: [id_empresa], references: [id_empresa])
  permisos        PermisoRolEmpresa[]
  usuarios        UsuarioRolEmpresa[]
  usuarios_empresa UsuarioEmpresa[]

  @@unique([nombre, id_empresa])
  @@map("roles_empresa")
}

model Usuario {
  id_usuario    Int       @id @default(autoincrement())
  nombre        String    @db.VarChar(100)
  email         String    @unique @db.VarChar(255)
  contrasena    String    @db.VarChar(255)
  telefono      String?   @db.VarChar(20)
  telefono_verificado Boolean @default(false)
  whatsapp_id   String?   @unique @db.VarChar(100)
  external_providers Json? @db.JsonB
  dni           String?   @unique @db.VarChar(20)
  tipo_documento String?  @default("DNI") @db.VarChar(10)
  fecha_nacimiento DateTime? @db.Date
  genero        String?   @db.VarChar(20)
  estado_civil  String?   @db.VarChar(20)
  foto_perfil   String?   @db.VarChar(255)
  fecha_registro DateTime @default(now()) @db.Timestamp(6)
  ultimo_acceso DateTime? @db.Timestamp(6)
  activo        Boolean   @default(true)
  rol           Rol       @relation(fields: [rol_id], references: [id_rol])
  rol_id        Int
  empresas      UsuarioEmpresa[]
  perfil_cliente Cliente? @relation("UsuarioCliente")
  sesiones      SesionUsuario[]
  tokens_revocados TokenRevocado[]
  autenticacion_2fa Autenticacion2FA[]
  permisos_usuario PermisoUsuario[]
  logs_pagos    LogPago[]
  auditoria_cambios AuditoriaCambio[]
  documentos    Documento[]
  archivos      ArchivoMultimedia[]
  roles_empresa    UsuarioRolEmpresa[]
  historial_precios HistorialPrecio[]
  versiones_archivo VersionArchivo[]
  reportes         Reporte[]
  ejecuciones_reporte EjecucionReporte[]
  plantillas_reporte PlantillaReporte[]
  auditoria        Auditoria[]

  @@index([telefono])
  @@index([whatsapp_id])
  @@map("usuarios")
}

model UsuarioRolEmpresa {
  id_usuario_rol Int     @id @default(autoincrement())
  id_usuario     Int
  id_rol         Int
  fecha_inicio   DateTime   @default(now())
  fecha_fin      DateTime?
  rolEmpresa     RolEmpresa @relation(fields: [id_rol], references: [id_rol])
  usuario        Usuario    @relation(fields: [id_usuario], references: [id_usuario])

  @@unique([id_usuario, id_rol])
  @@map("usuario_roles_empresa")
}

model HistorialPrecio {
  id_historial_precio Int       @id @default(autoincrement())
  producto           ProductoServicio @relation(fields: [id_producto], references: [id_producto])
  id_producto        Int
  precio_anterior    Decimal   @db.Decimal(10,2)
  precio_nuevo       Decimal   @db.Decimal(10,2)
  fecha_cambio       DateTime  @default(now())
  motivo             String?   @db.Text
  usuario            Usuario   @relation(fields: [id_usuario], references: [id_usuario])
  id_usuario         Int

  @@map("historial_precios")
}

model PrecioZona {
  id_precio_zona     Int       @id @default(autoincrement())
  producto           ProductoServicio @relation(fields: [id_producto], references: [id_producto])
  id_producto        Int
  zona               String    @db.VarChar(50)
  precio             Decimal   @db.Decimal(10,2)
  fecha_vigencia     DateTime  @default(now())
  fecha_fin          DateTime?
  activo             Boolean   @default(true)

  @@unique([id_producto, zona])
  @@map("precios_zona")
}

model Descuento {
  id_descuento       Int       @id @default(autoincrement())
  nombre             String    @db.VarChar(100)
  descripcion        String?   @db.Text
  tipo               String    @db.VarChar(20) // porcentaje, monto_fijo
  valor              Decimal   @db.Decimal(10,2)
  fecha_inicio       DateTime
  fecha_fin          DateTime?
  minimo_compra      Decimal?  @db.Decimal(10,2)
  maximo_descuento   Decimal?  @db.Decimal(10,2)
  productos          ProductoDescuento[]
  categorias         CategoriaDescuento[]
  activo             Boolean   @default(true)

  @@map("descuentos")
}

model ProductoDescuento {
  id_producto_descuento Int    @id @default(autoincrement())
  producto             ProductoServicio @relation(fields: [id_producto], references: [id_producto])
  id_producto          Int
  descuento            Descuento @relation(fields: [id_descuento], references: [id_descuento])
  id_descuento         Int

  @@unique([id_producto, id_descuento])
  @@map("productos_descuentos")
}

model CategoriaDescuento {
  id_categoria_descuento Int   @id @default(autoincrement())
  categoria             Categoria @relation(fields: [id_categoria], references: [id_categoria])
  id_categoria          Int
  descuento             Descuento @relation(fields: [id_descuento], references: [id_descuento])
  id_descuento          Int

  @@unique([id_categoria, id_descuento])
  @@map("categorias_descuentos")
}

model Cotizacion {
  id_cotizacion      Int       @id @default(autoincrement())
  empresa            Empresa   @relation(fields: [id_empresa], references: [id_empresa])
  id_empresa         Int
  cliente            Cliente   @relation(fields: [id_cliente], references: [id_cliente])
  id_cliente         Int
  fecha_emision      DateTime  @default(now())
  fecha_validez      DateTime
  subtotal           Decimal   @db.Decimal(10,2)
  descuento          Decimal   @db.Decimal(10,2)
  igv                Decimal   @db.Decimal(10,2)
  total              Decimal   @db.Decimal(10,2)
  estado             String    @default("pendiente") @db.VarChar(20)
  notas              String?   @db.Text
  items              ItemCotizacion[]
  orden_venta        OrdenVenta?
  consulta_whatsapp  ConsultaWhatsapp?

  @@map("cotizaciones")
}

model ItemCotizacion {
  id_item_cotizacion Int       @id @default(autoincrement())
  cotizacion         Cotizacion @relation(fields: [id_cotizacion], references: [id_cotizacion])
  id_cotizacion      Int
  producto           ProductoServicio @relation(fields: [id_producto], references: [id_producto])
  id_producto        Int
  cantidad           Int
  precio_unitario    Decimal   @db.Decimal(10,2)
  descuento          Decimal   @db.Decimal(10,2)
  subtotal           Decimal   @db.Decimal(10,2)

  @@map("items_cotizacion")
}

model OrdenVenta {
  id_orden_venta     Int       @id @default(autoincrement())
  id_empresa         Int
  empresa            Empresa   @relation(fields: [id_empresa], references: [id_empresa])
  id_cliente         Int
  cliente            Cliente   @relation(fields: [id_cliente], references: [id_cliente])
  id_cotizacion      Int?      @unique
  cotizacion         Cotizacion? @relation(fields: [id_cotizacion], references: [id_cotizacion])
  fecha_emision      DateTime  @default(now())
  fecha_entrega      DateTime?
  subtotal           Decimal   @db.Decimal(10,2)
  descuento          Decimal   @db.Decimal(10,2)
  igv                Decimal   @db.Decimal(10,2)
  total              Decimal   @db.Decimal(10,2)
  estado             String    @default("PENDIENTE") @db.VarChar(20)
  notas              String?   @db.Text
  factura            Factura?
  items              ItemOrdenVenta[]

  @@map("ordenes_venta")
}

model ItemOrdenVenta {
  id_item_orden_venta Int       @id @default(autoincrement())
  id_orden_venta      Int
  orden_venta         OrdenVenta @relation(fields: [id_orden_venta], references: [id_orden_venta])
  id_producto         Int
  producto            ProductoServicio @relation(fields: [id_producto], references: [id_producto])
  cantidad            Int
  precio_unitario     Decimal   @db.Decimal(10,2)
  descuento           Decimal   @db.Decimal(10,2)
  subtotal            Decimal   @db.Decimal(10,2)

  @@map("items_orden_venta")
}

model Factura {
  id_factura         Int       @id @default(autoincrement())
  orden_venta        OrdenVenta @relation(fields: [id_orden_venta], references: [id_orden_venta])
  id_orden_venta     Int       @unique
  numero_factura     String    @unique @db.VarChar(20)
  fecha_emision      DateTime  @default(now())
  subtotal           Decimal   @db.Decimal(10,2)
  descuento          Decimal   @db.Decimal(10,2)
  igv                Decimal   @db.Decimal(10,2)
  total              Decimal   @db.Decimal(10,2)
  estado             String    @default("emitida") @db.VarChar(20)
  notas              String?   @db.Text
  notas_credito      NotaCredito[]
  notas_debito       NotaDebito[]

  @@map("facturas")
}

model NotaCredito {
  id_nota_credito    Int       @id @default(autoincrement())
  factura            Factura   @relation(fields: [id_factura], references: [id_factura])
  id_factura         Int
  numero_nota        String    @unique @db.VarChar(20)
  fecha_emision      DateTime  @default(now())
  motivo             String    @db.Text
  monto              Decimal   @db.Decimal(10,2)
  estado             String    @default("emitida") @db.VarChar(20)
  items              ItemNotaCredito[]

  @@map("notas_credito")
}

model ItemNotaCredito {
  id_item_nota_credito Int       @id @default(autoincrement())
  nota_credito         NotaCredito @relation(fields: [id_nota_credito], references: [id_nota_credito])
  id_nota_credito      Int
  producto             ProductoServicio @relation(fields: [id_producto], references: [id_producto])
  id_producto          Int
  cantidad             Int
  precio_unitario      Decimal   @db.Decimal(10,2)
  igv_porcentaje       Decimal   @db.Decimal(5,2)
  subtotal             Decimal   @db.Decimal(10,2)
  igv                  Decimal   @db.Decimal(10,2)
  total                Decimal   @db.Decimal(10,2)

  @@map("items_nota_credito")
}

model NotaDebito {
  id_nota_debito     Int       @id @default(autoincrement())
  factura            Factura   @relation(fields: [id_factura], references: [id_factura])
  id_factura         Int
  numero_nota        String    @unique @db.VarChar(20)
  fecha_emision      DateTime  @default(now())
  motivo             String    @db.Text
  monto              Decimal   @db.Decimal(10,2)
  estado             String    @default("emitida") @db.VarChar(20)
  items              ItemNotaDebito[]

  @@map("notas_debito")
}

model ItemNotaDebito {
  id_item_nota_debito Int       @id @default(autoincrement())
  nota_debito         NotaDebito @relation(fields: [id_nota_debito], references: [id_nota_debito])
  id_nota_debito      Int
  producto            ProductoServicio @relation(fields: [id_producto], references: [id_producto])
  id_producto         Int
  cantidad            Int
  precio_unitario     Decimal   @db.Decimal(10,2)
  igv_porcentaje      Decimal   @db.Decimal(5,2)
  subtotal            Decimal   @db.Decimal(10,2)
  igv                 Decimal   @db.Decimal(10,2)
  total               Decimal   @db.Decimal(10,2)

  @@map("items_nota_debito")
}

model Proveedor {
  id_proveedor      Int      @id @default(autoincrement())
  nombre            String
  ruc               String
  direccion         String
  telefono          String
  email             String
  contacto_principal String?
  notas             String?
  activo            Boolean  @default(true)
  fecha_creacion    DateTime @default(now())
  fecha_actualizacion DateTime @updatedAt
  
  // Relación con Empresa
  empresa           Empresa  @relation(fields: [empresa_id], references: [id_empresa])
  empresa_id        Int

  // Relaciones
  ordenes_compra    OrdenCompra[]
  productos         ProductoProveedor[]
  cotizaciones      CotizacionProveedor[]

  @@map("proveedores")
}

model ProductoProveedor {
  id_producto_proveedor Int       @id @default(autoincrement())
  proveedor            Proveedor  @relation(fields: [id_proveedor], references: [id_proveedor])
  id_proveedor         Int
  codigo_proveedor     String?    @db.VarChar(50)
  precio_compra        Decimal    @db.Decimal(10,2)
  tiempo_entrega       Int?       // días
  stock_minimo         Int?
  stock_maximo         Int?
  activo              Boolean    @default(true)
  fecha_registro      DateTime   @default(now())
  producto            ProductoServicio @relation(fields: [id_producto], references: [id_producto])
  id_producto         Int

  @@unique([id_proveedor, id_producto])
  @@map("productos_proveedor")
}

model OrdenCompra {
  id_orden_compra   Int       @id @default(autoincrement())
  numero_orden      String    @unique @db.VarChar(20)
  fecha_emision     DateTime  @default(now())
  fecha_entrega     DateTime?
  estado            String    @default("pendiente") @db.VarChar(20)
  subtotal          Decimal   @db.Decimal(10,2)
  igv               Decimal   @db.Decimal(10,2)
  total             Decimal   @db.Decimal(10,2)
  notas             String?   @db.Text
  proveedor         Proveedor @relation(fields: [id_proveedor], references: [id_proveedor])
  id_proveedor      Int
  empresa           Empresa   @relation(fields: [id_empresa], references: [id_empresa])
  id_empresa        Int
  items             ItemOrdenCompra[]
  facturas          FacturaCompra[]

  @@map("ordenes_compra")
}

model ItemOrdenCompra {
  id_item_orden_compra Int       @id @default(autoincrement())
  orden_compra         OrdenCompra @relation(fields: [id_orden_compra], references: [id_orden_compra])
  id_orden_compra      Int
  producto             ProductoServicio @relation(fields: [id_producto], references: [id_producto])
  id_producto          Int
  cantidad             Int
  precio_unitario      Decimal   @db.Decimal(10,2)
  subtotal             Decimal   @db.Decimal(10,2)
  fecha_entrega        DateTime?
  estado               String    @default("pendiente") @db.VarChar(20)

  @@map("items_orden_compra")
}

model FacturaCompra {
  id_factura_compra  Int       @id @default(autoincrement())
  numero_factura     String    @unique @db.VarChar(20)
  fecha_emision      DateTime  @default(now())
  subtotal           Decimal   @db.Decimal(10,2)
  igv                Decimal   @db.Decimal(10,2)
  total              Decimal   @db.Decimal(10,2)
  estado             String    @default("pendiente") @db.VarChar(20)
  orden_compra       OrdenCompra @relation(fields: [id_orden_compra], references: [id_orden_compra])
  id_orden_compra    Int
  pagos              PagoCompra[]

  @@map("facturas_compra")
}

model PagoCompra {
  id_pago_compra     Int       @id @default(autoincrement())
  factura_compra     FacturaCompra @relation(fields: [id_factura_compra], references: [id_factura_compra])
  id_factura_compra  Int
  fecha_pago         DateTime  @default(now())
  monto              Decimal   @db.Decimal(10,2)
  metodo_pago        String    @db.VarChar(50)
  numero_comprobante String?   @db.VarChar(50)
  estado             String    @default("pendiente") @db.VarChar(20)

  @@map("pagos_compra")
}

model CotizacionProveedor {
  id_cotizacion_proveedor Int       @id @default(autoincrement())
  proveedor              Proveedor  @relation(fields: [id_proveedor], references: [id_proveedor])
  id_proveedor           Int
  fecha_emision          DateTime  @default(now())
  fecha_validez          DateTime
  subtotal               Decimal   @db.Decimal(10,2)
  igv                    Decimal   @db.Decimal(10,2)
  total                  Decimal   @db.Decimal(10,2)
  estado                 String    @default("pendiente") @db.VarChar(20)
  notas                  String?   @db.Text
  items                  ItemCotizacionProveedor[]

  @@map("cotizaciones_proveedor")
}

model ItemCotizacionProveedor {
  id_item_cotizacion_proveedor Int       @id @default(autoincrement())
  cotizacion_proveedor        CotizacionProveedor @relation(fields: [id_cotizacion_proveedor], references: [id_cotizacion_proveedor])
  id_cotizacion_proveedor     Int
  producto                    ProductoServicio @relation(fields: [id_producto], references: [id_producto])
  id_producto                 Int
  cantidad                    Int
  precio_unitario             Decimal   @db.Decimal(10,2)
  subtotal                    Decimal   @db.Decimal(10,2)
  tiempo_entrega              Int?      // días

  @@map("items_cotizacion_proveedor")
}

model Reporte {
  id_reporte       Int       @id @default(autoincrement())
  nombre           String
  descripcion      String?
  tipo_reporte     String    // ventas, compras, inventario, clientes, productos, financiero
  parametros       Json?     // Parámetros específicos del reporte
  formato          String    @default("pdf") // pdf, excel, csv
  programacion     Json?     // Configuración de programación (diario, semanal, mensual)
  ultima_ejecucion DateTime?
  activo           Boolean   @default(true)
  empresa          Empresa   @relation(fields: [id_empresa], references: [id_empresa])
  id_empresa       Int
  usuario          Usuario   @relation(fields: [id_usuario], references: [id_usuario])
  id_usuario       Int
  fecha_creacion   DateTime  @default(now())
  fecha_actualizacion DateTime @updatedAt
  ejecuciones      EjecucionReporte[]

  @@map("reportes")
}

model EjecucionReporte {
  id_ejecucion     Int       @id @default(autoincrement())
  reporte          Reporte   @relation(fields: [id_reporte], references: [id_reporte])
  id_reporte       Int
  fecha_inicio     DateTime  @default(now())
  fecha_fin        DateTime?
  estado           String    @default("pendiente") // pendiente, en_proceso, completado, error
  resultado        String?   // URL o ruta del archivo generado
  error            String?   // Mensaje de error si falló
  parametros       Json?     // Parámetros usados en esta ejecución
  usuario          Usuario   @relation(fields: [id_usuario], references: [id_usuario])
  id_usuario       Int

  @@map("ejecuciones_reporte")
}

model PlantillaReporte {
  id_plantilla     Int       @id @default(autoincrement())
  nombre           String
  descripcion      String?
  tipo_reporte     String    // ventas, compras, inventario, clientes, productos, financiero
  contenido        String    // Plantilla en formato HTML o JSON
  parametros       Json?     // Parámetros que acepta la plantilla
  activo           Boolean   @default(true)
  empresa          Empresa   @relation(fields: [id_empresa], references: [id_empresa])
  id_empresa       Int
  usuario          Usuario   @relation(fields: [id_usuario], references: [id_usuario])
  id_usuario       Int
  fecha_creacion   DateTime  @default(now())
  fecha_actualizacion DateTime @updatedAt

  @@map("plantillas_reporte")
}

// ========================================
// MODELOS SAAS - FUNCIONALIDAD WHATSAPP
// ========================================

model SuscripcionEmpresa {
  id_suscripcion     Int       @id @default(autoincrement())
  empresa            Empresa   @relation(fields: [id_empresa], references: [id_empresa])
  id_empresa         Int       @unique
  plan               PlanSuscripcion @default(TRIAL)
  estado             EstadoSuscripcion @default(TRIAL)
  fecha_inicio       DateTime  @default(now())
  fecha_fin          DateTime?
  limite_clientes    Int       @default(50)
  limite_productos   Int       @default(25)
  limite_usuarios    Int       @default(2)
  limite_mensajes    Int       @default(500)
  precio_mensual     Decimal   @db.Decimal(8,2) // En soles peruanos
  fecha_proximo_pago DateTime?
  activa             Boolean   @default(true)
  fecha_creacion     DateTime  @default(now())
  fecha_actualizacion DateTime @updatedAt

  // Relaciones
  pagos_suscripcion  PagoSuscripcion[]

  @@map("suscripciones_empresa")
}

model PagoSuscripcion {
  id_pago_suscripcion Int       @id @default(autoincrement())
  suscripcion        SuscripcionEmpresa @relation(fields: [id_suscripcion], references: [id_suscripcion])
  id_suscripcion     Int
  monto              Decimal   @db.Decimal(8,2) // En soles peruanos
  fecha_pago         DateTime  @default(now())
  metodo_pago        String    @db.VarChar(50)
  estado_pago        EstadoPago @default(PENDIENTE)
  referencia_externa String?   @db.VarChar(100) // ID de Stripe, PayPal, etc.
  periodo_inicio     DateTime
  periodo_fin        DateTime
  comprobante_url    String?   @db.VarChar(500)
  notas              String?   @db.Text

  @@map("pagos_suscripcion")
}

model ConsultaWhatsapp {
  id_consulta        Int       @id @default(autoincrement())
  empresa            Empresa   @relation(fields: [id_empresa], references: [id_empresa])
  id_empresa         Int
  cliente            Cliente?  @relation(fields: [id_cliente], references: [id_cliente])
  id_cliente         Int?
  numero_telefono    String    @db.VarChar(20)
  nombre_contacto    String?   @db.VarChar(100)
  tipo_consulta      TipoConsulta
  estado_consulta    EstadoConsulta @default(NUEVA)
  mensaje_original   String    @db.Text
  respuesta_automatica String? @db.Text
  fecha_consulta     DateTime  @default(now())
  fecha_respuesta    DateTime?
  procesado_por_ia   Boolean   @default(false)
  requiere_atencion  Boolean   @default(false)
  tiempo_respuesta   Int?      // en minutos
  satisfaccion       Int?      // 1-5 estrellas
  notas_internas     String?   @db.Text

  // Relaciones
  mensajes           MensajeWhatsapp[]
  cotizacion         Cotizacion? @relation(fields: [id_cotizacion], references: [id_cotizacion])
  id_cotizacion      Int? @unique

  @@index([id_empresa, estado_consulta])
  @@index([numero_telefono])
  @@index([fecha_consulta])
  @@map("consultas_whatsapp")
}

model MensajeWhatsapp {
  id_mensaje         Int       @id @default(autoincrement())
  consulta           ConsultaWhatsapp @relation(fields: [id_consulta], references: [id_consulta])
  id_consulta        Int
  mensaje            String    @db.Text
  es_entrante        Boolean   // true = cliente envía, false = empresa responde
  fecha_mensaje      DateTime  @default(now())
  tipo_mensaje       String    @default("text") // text, image, audio, document, location
  url_archivo        String?   @db.VarChar(500)
  nombre_archivo     String?   @db.VarChar(200)
  tamanio_archivo    Int?      // en bytes
  procesado          Boolean   @default(false)
  mensaje_id_wa      String?   @db.VarChar(100) // ID del mensaje en WhatsApp
  estado_entrega     String?   @db.VarChar(20)  // sent, delivered, read

  @@index([id_consulta, fecha_mensaje])
  @@index([mensaje_id_wa])
  @@map("mensajes_whatsapp")
}

model ConfiguracionWhatsapp {
  id_configuracion   Int       @id @default(autoincrement())
  empresa            Empresa   @relation(fields: [id_empresa], references: [id_empresa])
  id_empresa         Int       @unique
  numero_whatsapp    String    @db.VarChar(20)
  nombre_negocio     String    @db.VarChar(100)
  mensaje_bienvenida String    @db.Text
  mensaje_ausencia   String?   @db.Text
  mensaje_despedida  String?   @db.Text
  horario_atencion   Json?     // {inicio: "09:00", fin: "18:00", dias: ["L","M","X","J","V"]}
  respuestas_automaticas Boolean @default(true)
  ia_habilitada      Boolean   @default(false)
  webhook_url        String?   @db.VarChar(500)
  token_api          String?   @db.VarChar(200)
  instancia_id       String?   @db.VarChar(100) // ID de la instancia en Evolution API
  activo             Boolean   @default(true)
  fecha_creacion     DateTime  @default(now())
  fecha_actualizacion DateTime @updatedAt

  @@map("configuracion_whatsapp")
}

model PlantillaRespuesta {
  id_plantilla       Int       @id @default(autoincrement())
  empresa            Empresa   @relation(fields: [id_empresa], references: [id_empresa])
  id_empresa         Int
  nombre             String    @db.VarChar(100)
  tipo_consulta      TipoConsulta
  mensaje_plantilla  String    @db.Text
  variables          Json?     // Variables dinámicas como {nombre}, {producto}, {precio}
  condiciones        Json?     // Condiciones para usar esta plantilla
  activa             Boolean   @default(true)
  orden              Int       @default(0)
  fecha_creacion     DateTime  @default(now())
  fecha_actualizacion DateTime @updatedAt

  @@index([id_empresa, tipo_consulta])
  @@map("plantillas_respuesta")
}

model MetricaWhatsapp {
  id_metrica         Int       @id @default(autoincrement())
  empresa            Empresa   @relation(fields: [id_empresa], references: [id_empresa])
  id_empresa         Int
  fecha              DateTime  @db.Date
  consultas_recibidas Int      @default(0)
  consultas_respondidas Int    @default(0)
  tiempo_respuesta_promedio Int? // en minutos
  conversiones_cotizacion Int  @default(0)
  conversiones_venta Int      @default(0)
  clientes_nuevos    Int      @default(0)
  mensajes_enviados  Int      @default(0)
  mensajes_recibidos Int      @default(0)
  satisfaccion_promedio Decimal? @db.Decimal(3,2) // promedio de satisfacción 1-5

  @@unique([id_empresa, fecha])
  @@index([fecha])
  @@map("metricas_whatsapp")
}

// ========================================
// ENUMS PARA AUDITORÍA
// ========================================

enum TipoAccion {
  crear
  leer
  actualizar
  eliminar
  login
  logout
  acceso_denegado
  exportar
  importar
  configurar
}

enum TipoRecurso {
  usuario
  empresa
  cliente
  producto
  venta
  compra
  inventario
  reporte
  configuracion
  sistema
  email
  whatsapp
  notificacion
  archivo
  auditoria
}

enum NivelSeveridad {
  info
  warning
  error
  critical
}

// ========================================
// MODELO AUDITORÍA
// ========================================

model Auditoria {
  id                 String         @id @default(cuid())
  accion             TipoAccion
  recurso            TipoRecurso
  recurso_id         String?
  descripcion        String
  severidad          NivelSeveridad @default(info)
  usuario_id         Int?
  empresa_id         Int
  ip_address         String?
  user_agent         String?
  datos_anteriores   Json?
  datos_nuevos       Json?
  metadatos          Json?
  fecha_evento       DateTime       @default(now())
  
  // Relaciones
  usuario            Usuario?       @relation(fields: [usuario_id], references: [id_usuario])
  empresa            Empresa        @relation(fields: [empresa_id], references: [id_empresa])

  @@index([empresa_id, fecha_evento])
  @@index([usuario_id])
  @@index([accion])
  @@index([recurso])
  @@index([severidad])
  @@map("auditoria")
}

// ========================================
// MODELOS PARA INTEGRACIÓN N8N Y EVOLUTION API
// ========================================

// Enums para integraciones
enum TipoIntegracion {
  webhook_in
  webhook_out
  api_call
  n8n
  evolution
}

enum EstadoWorkflow {
  iniciado
  en_proceso
  completado
  error
  cancelado
}

enum EstadoMensaje {
  pendiente
  procesando
  enviado
  error
  cancelado
}

enum TipoMensajeQueue {
  whatsapp
  email
  sms
  push
}

enum EstadoConexion {
  conectado
  desconectado
  qr_pendiente
}

// Configuración de webhooks por empresa
model WebhookConfiguration {
  id_webhook_config  Int       @id @default(autoincrement())
  empresa            Empresa   @relation(fields: [id_empresa], references: [id_empresa])
  id_empresa         Int
  nombre             String    @db.VarChar(100)
  url                String    @db.VarChar(500)
  metodo             String    @default("POST") @db.VarChar(10)
  headers            Json?
  eventos            Json?     // Array de eventos que disparan el webhook
  secreto            String?   @db.VarChar(200) // Para validación de firma
  activo             Boolean   @default(true)
  reintentos         Int       @default(3)
  timeout_ms         Int       @default(30000)
  ultima_ejecucion   DateTime?
  fecha_creacion     DateTime  @default(now())
  fecha_actualizacion DateTime @updatedAt

  @@unique([id_empresa, nombre])
  @@map("webhook_configurations")
}

// Logs de integraciones
model IntegrationLog {
  id_log             String    @id @default(cuid())
  empresa            Empresa   @relation(fields: [id_empresa], references: [id_empresa])
  id_empresa         Int
  tipo_integracion   TipoIntegracion
  servicio           String?   @db.VarChar(50) // 'n8n', 'evolution', 'internal'
  evento             String?   @db.VarChar(100)
  metodo             String?   @db.VarChar(10)
  url                String?   @db.VarChar(500)
  headers            Json?
  payload            Json?
  respuesta          Json?
  codigo_estado      Int?
  duracion_ms        Int?
  exitoso            Boolean?
  mensaje_error      String?   @db.Text
  reintentos         Int       @default(0)
  ip_origen          String?   @db.VarChar(45)
  user_agent         String?   @db.Text
  fecha_evento       DateTime  @default(now())
  metadatos          Json?

  @@index([id_empresa, fecha_evento])
  @@index([tipo_integracion])
  @@map("integration_logs")
}

// Estados de flujos de trabajo
model WorkflowState {
  id_workflow_state  Int       @id @default(autoincrement())
  empresa            Empresa   @relation(fields: [id_empresa], references: [id_empresa])
  id_empresa         Int
  workflow_id        String    @db.VarChar(100) // ID del workflow en n8n
  nombre_workflow    String?   @db.VarChar(200)
  tipo_workflow      String?   @db.VarChar(50) // 'consulta', 'venta', 'cotizacion', 'soporte'
  estado             EstadoWorkflow
  paso_actual        String?   @db.VarChar(100)
  contexto           Json?     // Datos del contexto del workflow
  resultado          Json?
  error              String?   @db.Text
  iniciado_por       String?   @db.VarChar(100) // 'whatsapp', 'api', 'manual', 'scheduler'
  referencia_id      String?   @db.VarChar(100) // ID de la entidad relacionada
  fecha_inicio       DateTime  @default(now())
  fecha_fin          DateTime?
  fecha_actualizacion DateTime @updatedAt

  @@unique([id_empresa, workflow_id])
  @@index([id_empresa, estado])
  @@map("workflow_states")
}

// Cola de mensajes pendientes
model MessageQueue {
  id_queue           String    @id @default(cuid())
  empresa            Empresa   @relation(fields: [id_empresa], references: [id_empresa])
  id_empresa         Int
  tipo_mensaje       TipoMensajeQueue
  canal              String?   @db.VarChar(50) // 'evolution', 'resend', 'twilio'
  prioridad          Int       @default(5) // 1-10, donde 1 es más alta
  estado             EstadoMensaje @default(pendiente)
  destinatario       String    @db.VarChar(200)
  remitente          String?   @db.VarChar(200)
  asunto             String?   @db.VarChar(500)
  contenido          String    @db.Text
  contenido_html     String?   @db.Text
  archivos_adjuntos  Json?
  metadatos          Json?
  intentos           Int       @default(0)
  max_intentos       Int       @default(3)
  proximo_intento    DateTime?
  mensaje_error      String?   @db.Text
  mensaje_id_externo String?   @db.VarChar(200) // ID del mensaje en el servicio externo
  fecha_creacion     DateTime  @default(now())
  fecha_procesado    DateTime?
  fecha_enviado      DateTime?
  referencia_tipo    String?   @db.VarChar(50) // 'consulta', 'venta', 'notificacion'
  referencia_id      Int?

  @@index([estado])
  @@index([id_empresa, fecha_creacion])
  @@map("message_queues")
}

// Configuración de instancias de Evolution API
model EvolutionInstance {
  id_instance        Int       @id @default(autoincrement())
  empresa            Empresa   @relation(fields: [id_empresa], references: [id_empresa])
  id_empresa         Int       @unique
  instance_name      String    @unique @db.VarChar(100)
  instance_id        String?   @db.VarChar(200)
  numero_whatsapp    String?   @db.VarChar(20)
  estado_conexion    EstadoConexion @default(desconectado)
  qr_code            String?   @db.Text
  webhook_url        String?   @db.VarChar(500)
  webhook_token      String?   @db.VarChar(200)
  configuracion      Json?
  ultima_conexion    DateTime?
  fecha_creacion     DateTime  @default(now())
  fecha_actualizacion DateTime @updatedAt

  @@index([estado_conexion])
  @@map("evolution_instances")
}

// Plantillas de mensajes para automatización
model MessageTemplate {
  id_template        Int       @id @default(autoincrement())
  empresa            Empresa   @relation(fields: [id_empresa], references: [id_empresa])
  id_empresa         Int
  codigo             String    @db.VarChar(100)
  nombre             String    @db.VarChar(200)
  categoria          String?   @db.VarChar(50) // 'bienvenida', 'cotizacion', 'confirmacion', 'recordatorio'
  tipo_mensaje       String    @default("text") @db.VarChar(50) // 'text', 'button', 'list', 'media'
  contenido          String    @db.Text
  variables          Json?     // Variables disponibles: {{nombre}}, {{producto}}, etc
  botones            Json?     // Para mensajes con botones
  lista              Json?     // Para mensajes con lista
  media_url          String?   @db.VarChar(500)
  activo             Boolean   @default(true)
  uso_contador       Int       @default(0)
  fecha_creacion     DateTime  @default(now())
  fecha_actualizacion DateTime @updatedAt

  @@unique([id_empresa, codigo])
  @@index([id_empresa])
  @@map("message_templates")
}

// Eventos de negocio para n8n
model BusinessEvent {
  id_event           String    @id @default(cuid())
  empresa            Empresa   @relation(fields: [id_empresa], references: [id_empresa])
  id_empresa         Int
  tipo_evento        String    @db.VarChar(100) // 'nueva_consulta', 'nueva_venta', 'producto_actualizado', etc
  entidad            String    @db.VarChar(50) // 'consulta', 'venta', 'producto', 'cliente'
  entidad_id         Int
  datos              Json      // Datos del evento
  procesado          Boolean   @default(false)
  workflows_ejecutados Json?   // Array de workflows que se ejecutaron
  fecha_evento       DateTime  @default(now())
  fecha_procesado    DateTime?

  @@index([id_empresa, tipo_evento])
  @@index([procesado])
  @@map("business_events")
}
