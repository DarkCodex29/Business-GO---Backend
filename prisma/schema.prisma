generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model UsuarioEmpresa {
  id_usuario_empresa Int      @id @default(autoincrement())
  usuario            Usuario  @relation(fields: [usuario_id], references: [id_usuario])
  usuario_id         Int
  empresa            Empresa  @relation(fields: [empresa_id], references: [id_empresa])
  empresa_id         Int
  cargo              String?
  departamento       String?
  es_dueno           Boolean @default(false)
  fecha_inicio       DateTime @default(now())
  fecha_fin          DateTime?
  estado             String  @default("activo")
  tipo_contrato      String  @default("indefinido")
  salario            Decimal? @db.Decimal(10,2)
  horario_trabajo    Json?
  beneficios         Json?
  notas              String?
  fecha_asignacion   DateTime @default(now())
  rol_empresa        RolEmpresa? @relation(fields: [rol_empresa_id], references: [id_rol])
  rol_empresa_id     Int?

  @@unique([usuario_id, empresa_id])
  @@map("usuarios_empresa")
}

model ClienteEmpresa {
  id_cliente_empresa Int      @id @default(autoincrement())
  cliente            Cliente  @relation(fields: [cliente_id], references: [id_cliente])
  cliente_id         Int
  empresa            Empresa  @relation(fields: [empresa_id], references: [id_empresa])
  empresa_id         Int
  fecha_registro     DateTime @default(now())

  @@unique([cliente_id, empresa_id])
  @@map("clientes_empresa")
}

model Cliente {
  id_cliente    Int       @id @default(autoincrement())
  usuario       Usuario   @relation("UsuarioCliente", fields: [id_usuario], references: [id_usuario])
  id_usuario    Int       @unique
  nombre        String
  email         String
  telefono      String?
  tipo_cliente  String    @default("individual")
  preferencias  Json?
  limite_credito Decimal? @db.Decimal(10,2)
  dias_credito  Int?
  empresas      ClienteEmpresa[]
  historialCompras HistorialCompra[]
  citas         Cita[]
  valoraciones  Valoracion[]
  notificaciones Notificacion[]
  feedback      Feedback[]
  fidelizacion  Fidelizacion[]
  cotizaciones  Cotizacion[]

  @@map("clientes")
}

model Direccion {
  id_direccion Int       @id @default(autoincrement())
  direccion    String
  departamento String
  provincia    String
  distrito     String
  id_empresa   Int
  empresa      Empresa  @relation(fields: [id_empresa], references: [id_empresa])
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt

  @@map("direcciones")
}

model Categoria {
  id_categoria  Int                @id @default(autoincrement())
  nombre        String
  subcategorias Subcategoria[]
  productos     ProductoServicio[]
  descuentos    CategoriaDescuento[]

  @@map("categorias")
}

model Subcategoria {
  id_subcategoria Int                @id @default(autoincrement())
  id_categoria    Int
  nombre          String
  productos       ProductoServicio[]
  categoria       Categoria          @relation(fields: [id_categoria], references: [id_categoria])

  @@map("subcategorias")
}

model ProductoServicio {
  id_producto    Int       @id @default(autoincrement())
  nombre         String
  precio         Decimal   @db.Decimal(10,2)
  empresa        Empresa   @relation(fields: [id_empresa], references: [id_empresa])
  id_empresa     Int
  categoria      Categoria @relation(fields: [id_categoria], references: [id_categoria])
  id_categoria   Int
  subcategoria   Subcategoria? @relation(fields: [id_subcategoria], references: [id_subcategoria])
  id_subcategoria Int?
  es_servicio    Boolean   @default(false)
  atributos      Atributo[]
  historialCompras HistorialCompra[]
  valoraciones   Valoracion[]
  disponibilidad Disponibilidad?
  stock          Stock?
  archivos       ArchivoMultimedia[]
  historial_precios HistorialPrecio[]
  precios_zona   PrecioZona[]
  descuentos     ProductoDescuento[]
  items_cotizacion ItemCotizacion[]

  @@map("productos_servicios")
}

model Atributo {
  id_atributo    Int       @id @default(autoincrement())
  producto       ProductoServicio @relation(fields: [id_producto], references: [id_producto])
  id_producto    Int
  nombre         String
  valor          String

  @@map("atributos")
}

model HistorialCompra {
  id_historial   Int       @id @default(autoincrement())
  cliente        Cliente   @relation(fields: [id_cliente], references: [id_cliente])
  id_cliente     Int
  producto       ProductoServicio @relation(fields: [id_producto], references: [id_producto])
  id_producto    Int
  fecha_compra   DateTime  @default(now())
  pagos          Pago[]

  @@map("historial_compras")
}

model Cita {
  id_cita        Int       @id @default(autoincrement())
  cliente        Cliente   @relation(fields: [id_cliente], references: [id_cliente])
  id_cliente     Int
  empresa        Empresa   @relation(fields: [id_empresa], references: [id_empresa])
  id_empresa     Int
  fecha_cita     DateTime

  @@map("citas")
}

model MetodoPago {
  id_metodo_pago Int       @id @default(autoincrement())
  nombre         String    @unique
  descripcion    String?
  tipo_pago      String
  tiene_comision Boolean   @default(false)
  porcentaje_comision Decimal? @db.Decimal(5,2)
  pagos          Pago[]

  @@map("metodos_pago")
}

model Pago {
  id_pago        Int       @id @default(autoincrement())
  historial      HistorialCompra @relation(fields: [id_historial], references: [id_historial])
  id_historial   Int
  metodoPago     MetodoPago @relation(fields: [id_metodo_pago], references: [id_metodo_pago])
  id_metodo_pago Int
  monto          Decimal   @db.Decimal(10,2)
  fecha_pago     DateTime  @default(now())
  estado_pago    String    @default("pendiente")
  logsPagos      LogPago[]
  reembolsos     Reembolso[]

  @@map("pagos")
}

model LogPago {
  id_log_pago    Int       @id @default(autoincrement())
  pago           Pago      @relation(fields: [id_pago], references: [id_pago])
  id_pago        Int
  usuario        Usuario   @relation(fields: [id_usuario], references: [id_usuario])
  id_usuario     Int
  accion         String
  fecha_accion   DateTime  @default(now())

  @@map("logs_pagos")
}

model Valoracion {
  id_valoracion  Int       @id @default(autoincrement())
  cliente        Cliente   @relation(fields: [id_cliente], references: [id_cliente])
  id_cliente     Int
  producto       ProductoServicio @relation(fields: [id_producto], references: [id_producto])
  id_producto    Int
  puntuacion     Int
  comentario     String?

  @@map("valoraciones")
}

model Notificacion {
  id_notificacion    Int   @id @default(autoincrement())
  id_cliente         Int
  mensaje            String
  fecha_notificacion DateTime @default(now())
  cliente            Cliente  @relation(fields: [id_cliente], references: [id_cliente])

  @@map("notificaciones")
}

model Feedback {
  id_feedback    Int   @id @default(autoincrement())
  id_cliente     Int
  comentario     String
  fecha_feedback DateTime @default(now())
  cliente        Cliente  @relation(fields: [id_cliente], references: [id_cliente])

  @@map("feedback")
}

model Fidelizacion {
  id_fidelizacion Int    @id @default(autoincrement())
  id_cliente      Int
  fecha_inicio    DateTime
  fecha_fin       DateTime?
  cliente         Cliente   @relation(fields: [id_cliente], references: [id_cliente])

  @@map("fidelizaciones")
}

model Disponibilidad {
  id_disponibilidad Int       @id @default(autoincrement())
  producto         ProductoServicio @relation(fields: [id_producto], references: [id_producto])
  id_producto      Int         @unique
  cantidad_disponible Int

  @@map("disponibilidad")
}

model Comunicacion {
  id_comunicacion Int         @id @default(autoincrement())
  empresa         Empresa       @relation(fields: [id_empresa], references: [id_empresa])
  id_empresa      Int
  mensaje         String
  fecha_comunicacion DateTime @default(now())

  @@map("comunicaciones")
}

model Stock {
  id_stock       Int         @id @default(autoincrement())
  producto       ProductoServicio @relation(fields: [id_producto], references: [id_producto])
  id_producto    Int         @unique
  cantidad       Int

  @@map("stock")
}

model AuditoriaCambio {
  id_auditoria    Int   @id @default(autoincrement())
  tabla_nombre    String
  id_registro     Int
  fecha_accion    DateTime @default(now())
  id_usuario      Int
  detalles_cambio Json
  ip_address      String?
  tipo_operacion  String
  user_agent      String?
  usuario         Usuario  @relation(fields: [id_usuario], references: [id_usuario])

  @@map("auditoria_cambios")
}

model Autenticacion2FA {
  id_2fa              Int   @id @default(autoincrement())
  id_usuario          Int   @unique
  codigo_verificacion String
  fecha_expiracion    DateTime
  estado              String
  usuario             Usuario  @relation(fields: [id_usuario], references: [id_usuario])

  @@map("autenticaciones_2fa")
}

model Reembolso {
  id_reembolso   Int       @id @default(autoincrement())
  pago           Pago      @relation(fields: [id_pago], references: [id_pago])
  id_pago        Int
  monto          Decimal   @db.Decimal(10,2)
  fecha_reembolso DateTime @default(now())
  motivo         String

  @@map("reembolsos")
}

model SesionUsuario {
  id_sesion        Int   @id @default(autoincrement())
  id_usuario       Int
  token            String   @unique
  dispositivo      String?
  ip_address       String?
  ultima_actividad DateTime @default(now())
  activa           Boolean  @default(true)
  fecha_creacion   DateTime @default(now())
  fecha_expiracion DateTime
  usuario          Usuario  @relation(fields: [id_usuario], references: [id_usuario])

  @@map("sesiones_usuario")
}

model TokenRevocado {
  id_token         Int   @id @default(autoincrement())
  token_jti        String   @unique
  fecha_revocacion DateTime @default(now())
  razon            String?
  id_usuario       Int
  usuario          Usuario  @relation(fields: [id_usuario], references: [id_usuario])

  @@map("tokens_revocados")
}

model Documento {
  id_documento   Int         @id @default(autoincrement())
  tipo_documento String
  numero_documento String
  fecha_emision  DateTime
  fecha_vencimiento DateTime?
  url_documento  String
  estado         String      @default("vigente")
  notas          String?
  fecha_registro DateTime  @default(now())
  usuario        Usuario?    @relation(fields: [usuario_id], references: [id_usuario])
  usuario_id     Int?
  empresa        Empresa?     @relation(fields: [empresa_id], references: [id_empresa])
  empresa_id     Int?
  archivos       ArchivoMultimedia[]

  @@map("documentos")
}

model ConfiguracionRegional {
  id_configuracion    Int   @id @default(autoincrement())
  departamento        String
  provincia           String?
  distrito            String?
  configuracion       Json
  impuestos           Json
  horarios_operacion  Json
  moneda              String   @default("PEN")
  zona_horaria        String   @default("America/Lima")
  formato_fecha       String   @default("DD/MM/YYYY")
  formato_hora        String   @default("HH:mm")
  formato_numero      String   @default("es-PE")
  activo              Boolean  @default(true)
  fecha_registro      DateTime @default(now())
  fecha_actualizacion DateTime @updatedAt

  @@unique([departamento, provincia, distrito])
  @@map("configuraciones_regionales")
}

model ArchivoMultimedia {
  id_archivo    Int         @id @default(autoincrement())
  nombre_archivo String
  tipo_archivo  String
  mime_type     String
  url_archivo   String
  tamanio_bytes Int
  dimensiones   Json?
  metadata      Json?
  fecha_subida  DateTime    @default(now())
  activo        Boolean     @default(true)
  usuario       Usuario?    @relation(fields: [usuario_id], references: [id_usuario])
  usuario_id    Int?
  empresa       Empresa?     @relation(fields: [empresa_id], references: [id_empresa])
  empresa_id    Int?
  producto      ProductoServicio? @relation(fields: [producto_id], references: [id_producto])
  producto_id   Int?
  documento     Documento?    @relation(fields: [documento_id], references: [id_documento])
  documento_id  Int?

  @@map("archivos_multimedia")
}

model Empresa {
  id_empresa    Int       @id @default(autoincrement())
  nombre        String    @db.VarChar(100)
  razon_social  String    @db.VarChar(200)
  nombre_comercial String? @db.VarChar(100)
  ruc           String    @unique @db.VarChar(11)
  telefono      String?   @db.VarChar(20)
  tipo_empresa  String    @db.VarChar(50)
  tipo_contribuyente String @default("RER") @db.VarChar(20)
  estado        String    @default("activo") @db.VarChar(20)
  latitud       Decimal   @db.Decimal(9,6)
  longitud      Decimal   @db.Decimal(9,6)
  logo          String?   @db.VarChar(255)
  sitio_web     String?   @db.VarChar(255)
  redes_sociales Json?    @db.JsonB
  usuarios      UsuarioEmpresa[]
  clientes      ClienteEmpresa[]
  direcciones   Direccion[]
  productos     ProductoServicio[]
  citas         Cita[]
  comunicacion  Comunicacion[]
  documentos    Documento[]
  archivos      ArchivoMultimedia[]
  roles_empresa  RolEmpresa[]
  cotizaciones  Cotizacion[]

  @@map("empresas")
}

model Permiso {
  id_permiso        Int                 @id @default(autoincrement())
  nombre            String              @unique
  descripcion       String?
  recurso           String
  accion            String
  PermisoRol        PermisoRol[]
  PermisoRolEmpresa PermisoRolEmpresa[]
  PermisoUsuario    PermisoUsuario[]

  @@map("permisos")
}

model PermisoRol {
  id_permiso_rol Int     @id @default(autoincrement())
  rol_id         Int
  permiso_id     Int
  condiciones    String?
  Permiso        Permiso @relation(fields: [permiso_id], references: [id_permiso])
  Rol            Rol     @relation(fields: [rol_id], references: [id_rol])

  @@unique([rol_id, permiso_id])
  @@map("permisos_rol")
}

model PermisoRolEmpresa {
  id_permiso_rol Int     @id @default(autoincrement())
  id_rol         Int
  recurso        String
  accion         String
  fecha_creacion DateTime   @default(now())
  permiso_id     Int
  RolEmpresa     RolEmpresa @relation(fields: [id_rol], references: [id_rol])
  Permiso        Permiso    @relation(fields: [permiso_id], references: [id_permiso])

  @@unique([id_rol, recurso, accion])
  @@map("permisos_rol_empresa")
}

model PermisoUsuario {
  id_permiso_usuario Int     @id @default(autoincrement())
  usuario_id         Int
  permiso_id         Int
  condiciones        String?
  Permiso            Permiso @relation(fields: [permiso_id], references: [id_permiso])
  Usuario            Usuario @relation(fields: [usuario_id], references: [id_usuario])

  @@unique([usuario_id, permiso_id])
  @@map("permisos_usuario")
}

model Rol {
  id_rol       Int          @id @default(autoincrement())
  nombre       String       @unique
  descripcion  String?
  rol_padre_id Int?
  PermisoRol   PermisoRol[]
  Rol          Rol?         @relation("RolToRol", fields: [rol_padre_id], references: [id_rol])
  other_Rol    Rol[]        @relation("RolToRol")
  Usuario      Usuario[]

  @@map("roles")
}

model RolEmpresa {
  id_rol          Int      @id @default(autoincrement())
  nombre          String   @db.VarChar(100)
  descripcion     String?  @db.Text
  id_empresa      Int
  horario_inicio  String?  @db.VarChar(8)
  horario_fin     String?  @db.VarChar(8)
  fecha_inicio    DateTime? @db.Date
  fecha_fin       DateTime? @db.Date
  fecha_creacion  DateTime @default(now()) @db.Timestamp(6)
  fecha_actualizacion DateTime @updatedAt @db.Timestamp(6)
  empresa         Empresa  @relation(fields: [id_empresa], references: [id_empresa])
  permisos        PermisoRolEmpresa[]
  usuarios        UsuarioRolEmpresa[]
  usuarios_empresa UsuarioEmpresa[]

  @@unique([nombre, id_empresa])
  @@map("roles_empresa")
}

model Usuario {
  id_usuario    Int       @id @default(autoincrement())
  nombre        String    @db.VarChar(100)
  email         String    @unique @db.VarChar(255)
  contrasena    String    @db.VarChar(255)
  telefono      String?   @db.VarChar(20)
  dni           String?   @unique @db.VarChar(20)
  tipo_documento String?  @default("DNI") @db.VarChar(10)
  fecha_nacimiento DateTime? @db.Date
  genero        String?   @db.VarChar(20)
  estado_civil  String?   @db.VarChar(20)
  foto_perfil   String?   @db.VarChar(255)
  fecha_registro DateTime @default(now()) @db.Timestamp(6)
  ultimo_acceso DateTime? @db.Timestamp(6)
  activo        Boolean   @default(true)
  rol           Rol       @relation(fields: [rol_id], references: [id_rol])
  rol_id        Int
  empresas      UsuarioEmpresa[]
  perfil_cliente Cliente? @relation("UsuarioCliente")
  sesiones      SesionUsuario[]
  tokens_revocados TokenRevocado[]
  autenticacion_2fa Autenticacion2FA[]
  permisos_usuario PermisoUsuario[]
  logs_pagos    LogPago[]
  auditoria_cambios AuditoriaCambio[]
  documentos    Documento[]
  archivos      ArchivoMultimedia[]
  roles_empresa    UsuarioRolEmpresa[]
  historial_precios HistorialPrecio[]

  @@map("usuarios")
}

model UsuarioRolEmpresa {
  id_usuario_rol Int     @id @default(autoincrement())
  id_usuario     Int
  id_rol         Int
  fecha_inicio   DateTime   @default(now())
  fecha_fin      DateTime?
  RolEmpresa     RolEmpresa @relation(fields: [id_rol], references: [id_rol])
  Usuario        Usuario    @relation(fields: [id_usuario], references: [id_usuario])

  @@unique([id_usuario, id_rol])
  @@map("usuario_roles_empresa")
}

model HistorialPrecio {
  id_historial_precio Int       @id @default(autoincrement())
  producto           ProductoServicio @relation(fields: [id_producto], references: [id_producto])
  id_producto        Int
  precio_anterior    Decimal   @db.Decimal(10,2)
  precio_nuevo       Decimal   @db.Decimal(10,2)
  fecha_cambio       DateTime  @default(now())
  motivo             String?   @db.Text
  usuario            Usuario   @relation(fields: [id_usuario], references: [id_usuario])
  id_usuario         Int

  @@map("historial_precios")
}

model PrecioZona {
  id_precio_zona     Int       @id @default(autoincrement())
  producto           ProductoServicio @relation(fields: [id_producto], references: [id_producto])
  id_producto        Int
  zona               String    @db.VarChar(50)
  precio             Decimal   @db.Decimal(10,2)
  fecha_vigencia     DateTime  @default(now())
  fecha_fin          DateTime?
  activo             Boolean   @default(true)

  @@unique([id_producto, zona])
  @@map("precios_zona")
}

model Descuento {
  id_descuento       Int       @id @default(autoincrement())
  nombre             String    @db.VarChar(100)
  descripcion        String?   @db.Text
  tipo               String    @db.VarChar(20) // porcentaje, monto_fijo
  valor              Decimal   @db.Decimal(10,2)
  fecha_inicio       DateTime
  fecha_fin          DateTime?
  minimo_compra      Decimal?  @db.Decimal(10,2)
  maximo_descuento   Decimal?  @db.Decimal(10,2)
  productos          ProductoDescuento[]
  categorias         CategoriaDescuento[]
  activo             Boolean   @default(true)

  @@map("descuentos")
}

model ProductoDescuento {
  id_producto_descuento Int    @id @default(autoincrement())
  producto             ProductoServicio @relation(fields: [id_producto], references: [id_producto])
  id_producto          Int
  descuento            Descuento @relation(fields: [id_descuento], references: [id_descuento])
  id_descuento         Int

  @@unique([id_producto, id_descuento])
  @@map("productos_descuentos")
}

model CategoriaDescuento {
  id_categoria_descuento Int   @id @default(autoincrement())
  categoria             Categoria @relation(fields: [id_categoria], references: [id_categoria])
  id_categoria          Int
  descuento             Descuento @relation(fields: [id_descuento], references: [id_descuento])
  id_descuento          Int

  @@unique([id_categoria, id_descuento])
  @@map("categorias_descuentos")
}

model Cotizacion {
  id_cotizacion      Int       @id @default(autoincrement())
  empresa            Empresa   @relation(fields: [id_empresa], references: [id_empresa])
  id_empresa         Int
  cliente            Cliente   @relation(fields: [id_cliente], references: [id_cliente])
  id_cliente         Int
  fecha_emision      DateTime  @default(now())
  fecha_validez      DateTime
  subtotal           Decimal   @db.Decimal(10,2)
  descuento          Decimal   @db.Decimal(10,2)
  igv                Decimal   @db.Decimal(10,2)
  total              Decimal   @db.Decimal(10,2)
  estado             String    @default("pendiente") @db.VarChar(20)
  notas              String?   @db.Text
  items              ItemCotizacion[]
  orden_venta        OrdenVenta?

  @@map("cotizaciones")
}

model ItemCotizacion {
  id_item_cotizacion Int       @id @default(autoincrement())
  cotizacion         Cotizacion @relation(fields: [id_cotizacion], references: [id_cotizacion])
  id_cotizacion      Int
  producto           ProductoServicio @relation(fields: [id_producto], references: [id_producto])
  id_producto        Int
  cantidad           Int
  precio_unitario    Decimal   @db.Decimal(10,2)
  descuento          Decimal   @db.Decimal(10,2)
  subtotal           Decimal   @db.Decimal(10,2)

  @@map("items_cotizacion")
}

model OrdenVenta {
  id_orden_venta     Int       @id @default(autoincrement())
  cotizacion         Cotizacion @relation(fields: [id_cotizacion], references: [id_cotizacion])
  id_cotizacion      Int       @unique
  fecha_emision      DateTime  @default(now())
  fecha_entrega      DateTime?
  subtotal           Decimal   @db.Decimal(10,2)
  descuento          Decimal   @db.Decimal(10,2)
  igv                Decimal   @db.Decimal(10,2)
  total              Decimal   @db.Decimal(10,2)
  estado             String    @default("pendiente") @db.VarChar(20)
  notas              String?   @db.Text
  factura            Factura?

  @@map("ordenes_venta")
}

model Factura {
  id_factura         Int       @id @default(autoincrement())
  orden_venta        OrdenVenta @relation(fields: [id_orden_venta], references: [id_orden_venta])
  id_orden_venta     Int       @unique
  numero_factura     String    @unique @db.VarChar(20)
  fecha_emision      DateTime  @default(now())
  subtotal           Decimal   @db.Decimal(10,2)
  descuento          Decimal   @db.Decimal(10,2)
  igv                Decimal   @db.Decimal(10,2)
  total              Decimal   @db.Decimal(10,2)
  estado             String    @default("emitida") @db.VarChar(20)
  notas              String?   @db.Text
  notas_credito      NotaCredito[]
  notas_debito       NotaDebito[]

  @@map("facturas")
}

model NotaCredito {
  id_nota_credito    Int       @id @default(autoincrement())
  factura            Factura   @relation(fields: [id_factura], references: [id_factura])
  id_factura         Int
  numero_nota        String    @unique @db.VarChar(20)
  fecha_emision      DateTime  @default(now())
  motivo             String    @db.Text
  monto              Decimal   @db.Decimal(10,2)
  estado             String    @default("emitida") @db.VarChar(20)

  @@map("notas_credito")
}

model NotaDebito {
  id_nota_debito     Int       @id @default(autoincrement())
  factura            Factura   @relation(fields: [id_factura], references: [id_factura])
  id_factura         Int
  numero_nota        String    @unique @db.VarChar(20)
  fecha_emision      DateTime  @default(now())
  motivo             String    @db.Text
  monto              Decimal   @db.Decimal(10,2)
  estado             String    @default("emitida") @db.VarChar(20)

  @@map("notas_debito")
}
